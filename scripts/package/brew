#!/usr/bin/env bash

. "$DOTLY_PATH/scripts/core/_main.sh"
dot::load_library "dump.sh"

##? Some brew utils.
##?   - If cleanup does not receive any param will take your
##?     dumped Brewfile from dotly if exist. If does not exists
##?     and you don't provide a Brewfile will do nothing.
##?
##? Usage:
##?   brew list_installed
##?   brew cleanup [--prompt|-p|--never-prompt|-n] [<optional_path_brewfile>]
##?
##? Options:
##?   --prompt -p        You will be asked always for a file to restore in every package manager or lang
##?   --never-prompt -n  You will never be asked for any file to restore, if there is no file with the
##?                      same name as current hostname the package/lang is ignored and continue to try
##?                      with next package
##?
docs::parse "$@"

case $1 in
"list_installed")
  brew leaves
  ;;
"cleanup")
    BREW_PATH="${BREW_PATH:-$DOTFILES_PATH/os/mac/brew}"
    HOMEBREW_DUMP_FILE_PATH="${optional_path_brewfile:-$(package::exists_dump_current_machine_file "$BREW_PATH")}"
    
    if ! ${never_prompt:-false}; then
      [[ -z "$HOMEBREW_DUMP_FILE_PATH" ]] || ${prompt:-false} && package::which_file "$BREW_PATH" "Select Brewfile to import" "HOMEBREW_DUMP_FILE_PATH"
    fi

    if [[ -f $HOMEBREW_DUMP_FILE_PATH ]]; then
      cleanup_cmd="$(which brew) bundle --file=\"${HOMEBREW_DUMP_FILE_PATH}\" --force cleanup"
      output::write "This will execute the command... "
      output::write "    $cleanup_cmd"

      if output::yesno "Still want to perform the action"; then
        $(which brew) bundle --file="${HOMEBREW_DUMP_FILE_PATH}" --force cleanup
        output::solution "Cleanup performed, your system only have the Brewfile packages"
      else
        output::error "User aborted"
        exit 1
      fi

      if output::yesno "Do you want to execute additional 'brew cleanup'"; then
        $(which brew) cleanup
      fi
    else
      output::error "No Brewfile found"
    fi
  ;;
*)
  exit 1
  ;;
esac
