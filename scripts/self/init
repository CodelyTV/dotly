#!/usr/bin/env bash

source "$DOTLY_PATH/scripts/core/_main.sh"
source "$DOTLY_PATH/scripts/self/utils/init.sh"

##? Enable/Disable init scripts
##? 
##?
##? Usage:
##?   init [-h | --help]
##?   init [-v | --version]
##?   init enable [<script_name>]
##?   init disable [<script_name>]
##?   init status [<script_name>]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>

# Options part its important because assign short and long version of the params
docs::parse "$@"

SCRIPT_NAME="dot self autoupdater"
SCRIPT_VERSION="1.0.0"

# Print name and version
if $version; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

# Create folders if they does not exists
mkdir -p "$DOTLY_INIT_SCRIPTS_PATH"
mkdir -p "$DOTFILES_INIT_SCRIPTS_PATH"
mkdir -p "$ENABLED_INIT_SCRIPTS_PATH"

[[ ! -d "$ENABLED_INIT_SCRIPTS_PATH" ]] && output::error "The folder path to enable scripts does not exists" && exit 1
[[ ! -d "$DOTLY_INIT_SCRIPTS_PATH" ]] && output::error "The init scripts of DOTLY does not exists" && exit 1

# Get the scripts
init_scripts=("$(init::get_scripts)")
enabled_scripts=("$(init::get_enabled)")

case $1 in
"enable")
  if [[ -n "$script_name" ]]; then
    if init::exists_script "$script_name"; then
      init::enable "$script_name"
      init::status "$script_name" && output::solution "Enabled" && exit 0
      output::error "Could not be enabled." && exit 1
    else
      output::error "$script_name does not exists."
      exit 1
    fi
  fi

  not_enabled_scripts=("$(output::array_disjunction "${init_scripts[@]}" "${enabled_scripts[@]}")")
  [[ -n "$not_enabled_scripts" ]] && to_enable=$(output::array_disjunction "${init_scripts[@]}" "${enabled_scripts[@]}" | init::fzf "Choose one or more (Shift + Tab) scripts to enable when init terminal") || output::answer "Nothing can be enabled"
  [[ -z "$to_enable" ]] && exit 0

  for item in "${to_enable[@]}"; do
    output::answer "Init script '$item'..."
    init::enable "$item"
    if init::status "$item"; then
      output::solution "Enabled"
    else
      output::error "Could not be enabled."
      exit 1
    fi
  done
  ;;
"disable")
  if [[ -n "$script_name" ]]; then
    if init::exists_script "$script_name"; then
      init::disable "$script_name"
      if ! init::status "$script_name"; then
        output::solution "Disabled" && exit 0
      fi

      output::error "Could not be disabled." && exit 1
    else
      output::error "$script_name does not exists."
      exit 1
    fi
  fi

  [[ -n "$enabled_scripts" ]] && to_disable=$(echo "${enabled_scripts[@]}" | init::fzf "Choose one or more (Shift + Tab) scripts to disable from init terminal") || output::answer "Nothing to be disabled"
  [[ -z "$to_disable" ]] && exit 0
  
  init::disable "${to_disable[@]}"
  for item in "${to_disable[@]}"; do
    output::answer "Init script '$item'..."

    if ! init::status "$item"; then
      output::solution "Disabled"
    else
      output::error "Could not be disabled."
    fi
  done
  ;;
"status")
  if [ ! -z "$script_name" ]; then
    init::status "$script_name" && output::solution "'$script_name' is enabled" || output::error "'$script_name' is disabled"
  else
    for item in "${init_scripts[@]}"; do
      init::status "$item" &&\
        output::solution "'$item'... Enabled." ||\
        output::error "'$item'... Disabled."
    done
  fi
  ;;
*)
  "$DOTLY_PATH/bin/dot" self init -h
  ;;
esac

exit 0