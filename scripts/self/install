#!/usr/bin/env bash

set -euo pipefail

source "$DOTLY_PATH/scripts/core/_main.sh"
source "$DOTLY_PATH/scripts/self/utils/install.sh"

export ZIM_HOME="$DOTLY_PATH/modules/zimfw"

installer::install_zsh() {
  output::error "zsh not installed, installing"

  if ! "$DOTLY_PATH/bin/dot" package install zsh >/dev/null; then
    output::error "Could not install zsh!"
    exit 5
  fi
}

installer::install_fzf() {
  output::error "fzf not installed, installing"

  if ! $DOTLY_PATH/bin/dot package install fzf >/dev/null; then
    output::error "Could not install fzf!"
    exit 5
  fi
}

if ! platform::command_exists cargo; then
  output::error "rust not installed, installing"
  curl https://sh.rustup.rs -sSf | sh -s -- -y >/dev/null
  source "$HOME/.cargo/env"
fi

! platform::command_exists docpars && output::error "docpars not installed, installing" && cargo install -q docpars >/dev/null
! platform::command_exists delta && output::error "delta not installed, installing" && cargo install -q git-delta >/dev/null

##? Install dotly and setup dotfiles
##?
##? Usage:
##?    install
docs::parse "$@"

output::answer "Creating dotfiles structure"
"$DOTLY_PATH/bin/dot" dotfiles create >/dev/null

if platform::is_macos; then
  output::answer "🍎 Setting up macOS platform"
  install_macos_custom
fi

# @todo Backup if exists before
output::answer "Setting up symlinks"
"$DOTLY_PATH/bin/dot" symlinks apply >/dev/null
touch "$HOME/.z"

! platform::command_exists fzf && installer::install_fzf
! platform::command_exists zsh && installer::install_zsh

if ! str::contains zsh "$SHELL"; then
  output::answer "Setting zsh as the default shell"
  sudo chsh -s "$(command -v zsh)" >/dev/null
fi

output::answer "Installing zim"
zsh "$ZIM_HOME/zimfw.zsh" install >/dev/null

output::answer "Installing completions"
"$DOTLY_PATH/bin/dot" shell zsh reload_completions
