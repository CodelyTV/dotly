#!/usr/bin/env bash
#shellcheck disable=SC1091,SC2016,SC2207

# TODO Review that is using new symlinks.sh and dotbot_yaml.sh libraries
# TODO Tests
# [ ] Test Edit by value skiping file deletion
# [ ] Test Edit by value
# [ ] Test Edit by value not providing any origin
# [ ] Test Edit not providing any origin
# [ ] Test Edit by link without any new value
# [ ] Test Edit by link wit a new value
# [ ] Test Edit by link skiping file deletion
# [ ] All task completed

set -eou pipefail

[[ -z "$DOTLY_PATH" ]] && exit 1

. "$DOTLY_PATH/scripts/core/_main.sh"
dot::load_library "dotbot_yaml.sh"
dot::load_library "symlinks.sh"

##?  Edit the link section of dotbot yaml file. With this you could edit a
##? current symbolic link that is applied when you use `dot symlinks apply'
##?  Important fact is that this command do not delete or replace any file
##? in your DOTFILES_PATH.
##?
##? If not <yaml_file> is provided, then use:
##?   - '$DOTFILES_PATH/symlinks/conf.yaml'
##?
##? Usage:
##?   edit [-h | --help]
##?   edit [-v | --version]
##?   edit [-b | --by-value] [--yaml=<yaml_file>] [<origin_link_path> [<new_origin_link_path>]]
##?
##? Options:
##?   -h --help           Show this help
##?   -v --version        Show the program version
##?   -b --by-value       Edit by the value of the link in the <yaml_file>.
##?   --yaml=<yaml_file>  Use a custom yaml file instead of default one which is
##?                       DOTFILES_PATH/symlinks/conf.yaml
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
docs::parse "$@"

SCRIPT_NAME="dot dotfiles link"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

output::empty_line

yaml_file="$(dotbot::yaml_file_path "${yaml:-}")"
[[ -z "${yaml_file:-}" ]] && output::error "The dotbot yaml file \`$yaml_file\` does not exists." && exit 1

if [[ -n "${origin_link_path:-}" ]]; then
  yaml_link_value="$(symlinks::link_exists "$yaml_file" "$origin_link_path")"
  [[ -z "${yaml_link_value:-}" ]] && output::error "Given link does not exists so it is no possible to edit." && exit 1

  [[ -z "${new_origin_link_path:-}" ]] && output::question_default "Write the new link for \`$origin_link_path\`" "$origin_link_path" "new_origin_link_path"
  [[ "$origin_link_path" == "$new_origin_link_path" ]] && output::error "Skipping, nothing to change." && exit 1

  if symlinks::edit_link_by_link_path "$yaml_file" "$origin_link_path" "$new_origin_link_path"; then
    output::error "Link could not be edited"
    exit 1
  else
    output::solution "Link \`$origin_link_path\` changed to \`$new_origin_link_path\` for file: $yaml_link_value"
  fi
else
  preview_cmd='. "$DOTLY_PATH/scripts/core/_main.sh";'
  preview_cmd+='dot::load_library "dotbot_yaml.sh";'
  preview_cmd+="yaml_file='$yaml_file';"
  preview_cmd+='echo "Press Tab+Shift to select multiple options.\n'
  preview_cmd+='Press Ctrl+C to exit with no selection.\n\n'
  preview_cmd+='----\n\nLinks:\n\n'
  preview_cmd+='$(cat "$yaml_file" | dotbot::jq_yaml_file -r ".[].link | values")";'

  if [ -z "${links[*]}" ] && $by_value; then
    dotfiles=($(symlinks::get_all_link_values "$yaml_file" | symlinks::fzf -m --preview "${preview_cmd[*]}" --header "Select dotfile(s) to edit the link."))

    for df in "${dotfiles[@]}"; do
      links=("$(dotbot::get_key_by_value_in "link" "$df" "$yaml_file")")
    done
  elif [ -z "${links[*]}" ]; then
    links=($(symlinks::get_all_links "$yaml_file" | symlinks::fzf -m --preview "${preview_cmd[*]}" --header "Select link(s) to edit the link."))
  fi

  for current_link in "${links[@]}"; do
    yaml_link_value="$(dotbot::get_value_of_key_in "link" "$current_link" "$yaml_file")"

    output::question_default "Write the new link for '$current_link'" "$current_link" "new_link"

    if [[ -n "$new_link" && "$new_link" != "$current_link" ]]; then 
      symlinks::edit_link_by_link_path "$yaml_file" "$current_link" "$new_link"

      if [[ -n "$(symlinks::link_exists "$yaml_file" "$current_link")" ]]; then
        if [[ -n "$(symlinks::link_exists "$yaml_file" "$new_link")" ]]; then 
          output::error "Link '$new_link' was added to point the same link as '$current_link' but could not be deleted from '$yaml_file'"
          output::error "Delete it manually or you will preserve old and new symlink."
        else
          output::error "Link '$current_link' could not be replaced for '$new_link' in the '$yaml_file'."
        fi
        exit 1
      else
        output::solution "Link '$current_link' changed to '$new_link' for file: $yaml_link_value"
      fi
    else
      output::answer "No new link or point to the same link"
      exit 0
    fi
  done
fi
