#!/usr/bin/env bash

set -euo pipefail

. "$DOTLY_PATH/scripts/core/_main.sh"

symlinks::apply() {
  local -r CONFIG="$DOTFILES_PATH/symlinks/$1"
  shift

  echo
  "$DOTLY_PATH/modules/dotbot/bin/dotbot" "$@" "$CONFIG" || output::error "Error applying symlinks file name '$(basename "$CONFIG")'"
  echo
}

##? Apply all symlinks
##?
##? Usage:
##?    apply [-h | --help]
##?    apply [-v | --version]
##?    apply [-q | --quiet]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?   -q --quiet    Run dotbot in super quiet mode
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
docs::parse "$@"

SCRIPT_NAME="dot symlinks apply"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-false}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

# Dotbot args
_args=()
if ${quiet:-false}; then
  _args+=(--super-quiet)
fi

_args+=(
  -d
  "$DOTFILES_PATH"
  -c
)

symlinks::apply "conf.yaml" "${_args[@]}"

case "${1:-}" in
"update")
  if [[ -z "$symlinks_file" ]]; then
    symlinks_file="$DOTLY_PATH/symlinks/$(symlinks::get_files | symlinks::fzf)"
    [[ -z "$symlinks_file" ]] && exit 0
  else
    if [[ -f "$DOTLY_PATH/symlinks/$symlinks_file.yaml" ]]; then
      symlinks_file="$DOTLY_PATH/symlinks/$symlinks_file.yaml"
    elif [[ -f "$DOTLY_PATH/symlinks/$symlinks_file" ]]; then
      symlinks_file="$DOTLY_PATH/symlinks/$symlinks_file"
    else
      output::error "The file does not exists"
      exit 1
    fi
  fi


  output::header "Apply dotbot update to your dotfiles"
  output::write "This will apply a selected symlinks to apply any dotly update"
  
  output::empty_line
  "$DOTLY_PATH/modules/dotbot/bin/dotbot" -d "$DOTFILES_PATH" -c "$symlinks_file"
  output::empty_line

if platform::is_macos; then
  if platform::is_macos_arm; then
    symlinks::apply "conf.macos.yaml" "${_args[@]}"
  else
    symlinks::apply "conf.macos-intel.yaml" "${_args[@]}"
  fi
else
  symlinks::apply "conf.linux.yaml" "${_args[@]}"
fi

log::success "Done!"
