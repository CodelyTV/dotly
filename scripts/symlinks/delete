#!/usr/bin/env bash
#shellcheck disable=SC2016,SC2207

# TODO Test, after all tests work delete this
# [ ] Test Delete by value skiping file deletion
# [ ] Test Delete by value
# [ ] Test Delete by link skiping file deletion
# [ ] Test Delete by link
# [ ] All task completed

set -eou pipefail

[[ -z "$DOTLY_PATH" ]] && exit 1

. "$DOTLY_PATH/scripts/core/_main.sh"
dot::load_library "dotbot_yaml.sh"
dot::load_library "symlinks.sh"

##? Delete a symbolic link in the "link" directive of your dotbot yaml file.
##? This also delete the file if no option --skip is provided.
##?
##? If not <yaml_file> is provided, then use:
##?   - '$DOTFILES_PATH/symlinks/conf.yaml'
##?
##? Usage:
##?   delete [-h | --help]
##?   delete [-v | --version]
##?   delete [-b | --by-value] [-s | --skip] [--yaml=<yaml_file>] [<origin_link_path>]
##?
##? Options:
##?   -h --help           Show this help
##?   -v --version        Show the program version
##?   -b --by-value       Delete by the value of the link in the <yaml_file> instead
##?                       of deleting by the link.
##?   -s --skip           Skip the deletion of the file in DOTFILES and delete only
##?                       the value in the symlink yaml file.
##?   --yaml=<yaml_file>  Use a custom yaml file instead of default one which is
##?                       DOTFILES_PATH/symlinks/conf.yaml
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
docs::parse "$@"

SCRIPT_NAME="dot dotfiles link"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

yaml_file="$(dotbot::yaml_file_path "${yaml:-conf}")"
[[ -z "${yaml_file:-}" ]] && output::error "The dotbot yaml file \`$yaml_file\` does not exists." && exit 1

links=("${origin_link_path:-}")

preview_cmd='. "$DOTLY_PATH/scripts/core/_main.sh";'
preview_cmd+='dot::load_library "dotbot_yaml.sh" "symlinks";'
preview_cmd+="yaml_file=\"$yaml_file\";"
preview_cmd+='echo "Press Tab+Shift to select multiple options.\n'
preview_cmd+='Press Ctrl+C to exit with no selection.\n\n'


if [ -z "${links[*]}" ] && ${by_value:-false}; then
  preview_cmd+='Linked in:\n'
  preview_cmd+='\t$(symlinks::get_link_by_linked_path "$yaml_file" {};)";'
  dotfiles=($(dotbot::get_all_values_in "link" "$yaml_file" | symlinks::fzf -m --preview "${preview_cmd[*]}" --header "Select dotfile(s) link to delete."))

  for df in "${dotfiles[@]}"; do
    if ${skip:-false}; then
      if symlinks::delete_link_by_link_value "$df" "$yaml_file"; then
        output::solution "Link for \`$df\` deleted from yaml file."
      else
        output::error "Link for \`$df\` could not be deleted from yaml file."
      fi
    else
      symlinks::delete_link_and_files_by_link_value "$yaml_file" "$df"
      output::solution "\`$df\` deleted."
    fi
  done
else
  if [ -z "${links[*]}" ]; then
    preview_cmd+='Point to file in \"DOTFILES_PATH\":\n'
    preview_cmd+='\t$(symlinks::get_linked_path_by_link "$yaml_file" {})";'
    links=($(symlinks::get_all_links "$yaml_file" | symlinks::fzf -m --preview "${preview_cmd[*]}" --header "Select link(s) to delete and it 'dotfile' file."))
  fi

  for link in "${links[@]}"; do
    link="$(dotbot::relative_path "$link")"
    if ${skip:-false}; then
      # Delete only the symlink in yaml and symbolic link
      if symlinks::delete_link "$yaml_file" "$link"; then
        output::solution "\`$link\` link deleted from yaml file."
      else
        output::error "Error deleting \`$link\` symlink."
      fi
    else
      # Delete the symliks, files and the symlink in yaml
      if symlinks::delete_link_and_files "$yaml_file" "$link"; then
        output::solution "\`$link\` deleted from yaml and symlinked files."
      else
        output::error "Error deleting \`$link\` and the files it is linking to."
      fi
    fi
  done
fi
