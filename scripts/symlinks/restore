#!/usr/bin/env bash

[[ -z "$DOTLY_PATH" ]] && exit 1

. "$DOTLY_PATH/scripts/core/_main.sh"
. "$DOTLY_PATH/scripts/symlinks/lib/symlinks.sh"

##?  Restore moved file to inside your DOTFILES_PATH to its current link and
##? delete the link from your dotbot yaml file and move the file out (if the
##? link is out) of your DOTFILES_PATH.
##?
##?  You can use directly to any linked file or the file inside your
##? DOTFILES_PATH. If the file has no link or no file in your dotfiles will
##? return an error.
##?
##? If not <yaml_file> is provided, then use:
##?   - '$DOTFILES_PATH/symlinks/conf.yaml'
##?
##? Usage:
##?   restore [-h | --help]
##?   restore [-v | --version]
##?   restore [<link_or_dotfile_path> [<yaml_file>]]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
docs::parse "$@"

SCRIPT_NAME="dot dotfiles restore"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

yaml_file="$(symlinks::get_file_path "$yaml_file")"

link=$(symlinks::link_exists "$link_or_dotfile_path" "$yaml_file")

if [ -n "$link_or_dotfile_path" ]; then
    restore_links=("$(symlinks::link_exists "$link_or_dotfile_path" "$yaml_file")")
    [ -z "${restore_links[*]}" ] &&\
      output::error "Nothing to be restored" &&\
      exit 1
else
  preview_cmd='source "$DOTLY_PATH/scripts/core/_main.sh";'
  preview_cmd+='source "$DOTLY_PATH/scripts/core/dotbot_lib_loader.sh";'
  preview_cmd+="yaml_file=$yaml_file;"
  preview_cmd+='echo "Press Tab+Shift to select multiple options.\n'
  preview_cmd+='Press Ctrl+C to exit with no selection.\n\n'
  preview_cmd+='Point to file in \"DOTFILES_PATH\":\n'
  preview_cmd+='\t$(cat "$yaml_file" | dotbot::get_value_of_key_in "link" {})";'
  restore_links=($(dotbot::get_all_keys_in "link" "$yaml_file" | symlinks::fzf -m --preview "${preview_cmd[*]}" --header "Select link(s) to be restored."))
fi

for restore_link in "${restore_links[@]}"; do
  symlinks::restore_by_link "$yaml_file" "$restore_link"
  output::solution "'$restore_link' restored."
done
