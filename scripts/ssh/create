#!/usr/bin/env bash

. "$DOTLY_PATH/scripts/core/_main.sh"
. "$DOTLY_PATH/scripts/ssh/lib/ssh.sh"

##? Create ssh configurations, enable or disable them easily
##? 
##?
##? Usage:
##?   create [-h | --help]
##?   create [-v | --version]
##?   create [<ssh_alias>]
##?
##? Options:
##?   -h --help             Show this help
##?   -v --version          Show the program version
##?   create [<ssh_alias>]  Create a new basic SSH file with SSH alias specified
##?                         if provided. If not, you will be asked for it.
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.co>

# Options part its important because assign short and long version of the params
docs::parse "$@"

SCRIPT_NAME="dot ssh create"
SCRIPT_VERSION="1.0.0"

# Print name and version
if $version; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi


output::header "This will create a ssh config file"
output::empty_line
output::write "Set up an ssh alias, you can use multiple separated by space, the"
output::write "name of your ssh config file in config.d will be the hostname."
output::write "The alias are created and enabled by default."
output::empty_line

# We want to execute while as do...while (at least once)
# so this is the method to get in without duplicate code
tmp_ssh_alias="${ssh_alias:-}"
ssh_alias=""
while [ -z "$ssh_alias" ]; do
  if [[ -n "$tmp_ssh_alias" ]]; then
    ssh_alias="$tmp_ssh_alias"
    tmp_ssh_alias=""
  fi
  
  [[ -z "$ssh_alias" ]] && output::question "Set your alias/es (use a simple space to insert multiple)" "ssh_alias"

  if [[ -n "$ssh_alias" ]]; then
    for item_alias in $(echo "$ssh_alias" | tr " " "\n"); do
      if ssh::check_alias_exists "$item_alias"; then
        ssh_alias=""
        output::error "The '$item_alias' alias exists in your ssh configuration file:"
        output::error "\t'$(ssh::get_configd_file_by_alias "$item_alias")'."
      fi
    done
  fi
done

while [[ -z "${ssh_hostname:-}" ]]; do
  output::question "Set the hostname" "ssh_hostname"
  if ssh::check_configd_file_name "$ssh_hostname"; then
    output::error "The '$ssh_hostname' file currently exists in:"
    output::error "\t$(ssh::check_configd_file_name "$ssh_hostname")"
  fi
done

output::question_default "Set the user (write 'null' for no user)" "$USER" "ssh_user"
[[ "$ssh_user" == "null" ]] && ssh_user=""
output::question_default "Set the port (write 'null' for no port)" "22" "ssh_port"
[[ "$ssh_port" == "null" ]] && ssh_port=""

ssh::new_ssh_config_from_tpl "$ssh_alias" "$ssh_hostname" "$ssh_user" "$ssh_port" &&\
  output::solution "'$ssh_hostname' file created."

output::yesno "Do you want to enable it" &&\
  ssh::enable_by_configd_file "$ssh_hostname" &&\
  output::solution "'$ssh_hostname' enabled"