#!/usr/bin/env bash

{

set -euo pipefail

##? Setups the environment
##?
##? Usage:
##?    install




red='\033[0;31m'
green='\033[0;32m'
purple='\033[0;35m'
normal='\033[0m'

_w() {
  local -r text="${1:-}"
  echo -e "$text"
}
_a() { _w " > $1"; }
_e() { _a "${red}$1${normal}"; }
_s() { _a "${green}$1${normal}"; }
#_q() { read -rp "ü§î $1: " "$2"; }
_q() { echo -e "ü§î $1: "; read -r "$2"; }

current_timestamp() { date +%s; }



command_exists() {
  type "$1" >/dev/null 2>&1
}

_w "  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
_w "~ ‚îÇ üöÄ Welcome to the ${green}dotly${normal} restorer! ‚îÇ ~"
_w "  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
_w

_e "¬°¬°IMPORTANT!!"
_w " This installer only works if your dotfiles are in Github"
_w

_w "  Remember that if your dotfiles repository is private you"
_w "need to generate or restore the ssh key and added to your"
_w "github account in:"
_w "  - Github > Settings > SSH and GPG Keys > Add new SSH key"
_w

GITHUB_USER=""
while [ -z "$GITHUB_USER" ]; do
    _q "üë§ Which is your github user?" "GITHUB_USER"
done

GITHUB_REPOSITORY=""
while [ -z "$GITHUB_REPOSITORY" ]; do
    _q "üì¶ Which is your github repository?" "GITHUB_REPOSITORY"
done

_q "Where do you want your dotfiles to be located? (default ~/.dotfiles)" "DOTFILES_PATH"
DOTFILES_PATH="${DOTFILES_PATH:-$HOME/.dotfiles}"
DOTFILES_PATH="$(eval echo "$DOTFILES_PATH")"
export DOTFILES_PATH="$DOTFILES_PATH"

if ! command_exists git; then
  _e "git not installed, trying to install"

  if command_exists apt; then
    _a "Installing using apt"
    sudo apt -y install git >/dev/null 2>&1
  elif command_exists dnf; then
    _a "Installing using dnf"
    sudo dnf -y install git >/dev/null 2>&1
  elif command_exists yum; then
    _a "Installing using yum"
    yes | sudo yum install git >/dev/null 2>&1
  elif command_exists brew; then
    _a "Installing using brew"
    yes | brew install git >/dev/null 2>&1
  elif command_exists pacman; then
    _a "Installing using pacman"
    sudo pacman -S --noconfirm git >/dev/null 2>&1
  else
      case "$OSTYPE" in
        darwin*)
          #_a "Updating macOS üåç"
          #sudo softwareupdate -i -a
          
          _a "Checking if Command Line Tools are installed üïµÔ∏è‚Äç‚ôÇÔ∏è"
          
          xcode-select --install 2>&1 | grep installed > /dev/null
          if [[ $? ]]; then
            _a "Installing Command Line Tools üì∫"
            xcode-select --install
            _q "Press a key after command line tools has finished to continue...üëá" "CLT_INSTALLED"
          fi
          ;;
        *)
          _e "Could not install git, no package provider found"
          exit 1
          ;;
      esac
  fi
fi

git clone git@github.com:$GITHUB_USER/$DOTFILES_REPOSITORY.git "$DOTFILES_PATH"
cd "$DOTFILES_PATH"
git submodule update --init --recursive
"$DOTLY_PATH/bin/dot" self install
_a "üéâ dotfiles restored! üéâ"

_q "üì¶ Do you want to import previous installed packages? [Y/n]" "USER_IMPORT_PACKAGES"
USER_IMPORT_PACKAGES=${USER_IMPORT_PACKAGES:-'Y'}
[[ "$USER_IMPORT_PACKAGES" =~ ^[Yy] ]] && "$DOTLY_PATH/bin/dot" package import

if [[ "$OSTYPE" =~ ^[darwin] ]]; then
  _w
  _w "If you want to import your previous macOS settings, if would be done from the"
  _w "default directory $DOTFILES_PATH/os/mac/settings, if you want to restore it"
  _w "from another path, do it manually executing 'dot mac defaults import /path/to'"
  _q "‚öôÔ∏è Do you want to import stored macOS configuration? [y/N]" "USER_OSX_SETTINGS"
  [[ "$USER_OSX_SETTINGS" =~ ^[Yy] ]] && "$DOTLY_PATH/bin/dot" mac defaults import
fi
_a "üéâ dotfiles restored! üéâ"
_a "Please, restart your terminal to see the changes."
echo "Press a key to exit the terminal..."
_q "" "REPLY"
exit
}