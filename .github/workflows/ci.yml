name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: ğŸš€ Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-12
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set current repository for pull requests
        run: |
          echo "DOTLY_PR_REPOSITORY=${{ github.event.pull_request.head.repo.full_name }}" >> $GITHUB_ENV

      - name: Set current repository and branch
        run: |
          echo "DOTLY_REPOSITORY=${DOTLY_PR_REPOSITORY:-CodelyTV/dotly}" >> $GITHUB_ENV
          echo "DOTLY_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
          echo "DOTLY_ENV=CI" >> $GITHUB_ENV

      - name: Install
        run: echo "$HOME/.dotfiles" | bash installer

      - name: Debug on error
        if: ${{ failure() }}
        run: |
          echo "DOTLY_REPOSITORY: $DOTLY_REPOSITORY"
          echo "DOTLY_BRANCH: $DOTLY_BRANCH"
          echo "DOTLY_ENV: $DOTLY_ENV"
          cat "$HOME/dotly.log"

  static-analysis:
    runs-on: ubuntu-latest
    name: ğŸ’¿ Static analysis
    steps:
      - uses: actions/checkout@v2

      - name: Set needed environment variables
        run: |
          echo "DOTLY_PATH=$PWD" >> $GITHUB_ENV

      - name: ğŸ’¿ Static analysis
        run: bash scripts/self/static_analysis

  lint:
    runs-on: ubuntu-latest
    name: ğŸ’… Lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.1'

      - name: Set needed environment variables
        run: |
          echo "DOTLY_PATH=$PWD" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/go/bin" >> $GITHUB_ENV

      - name: ğŸ“¥ Install shfmt
        run: go install mvdan.cc/sh/v3/cmd/shfmt@latest

      - name: ğŸ’… Lint bash files
        run: bash scripts/self/lint
